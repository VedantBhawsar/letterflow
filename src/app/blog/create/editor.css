/* TipTap Editor Styles */

/* Base editor container */
.ProseMirror {
  min-height: 300px;
  padding: 1rem;
  outline: none;
  font-family: inherit;
  font-size: 1rem;
  line-height: 1.5;
}

/* Placeholder */
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  height: 0;
}

/* Headings */
.ProseMirror h1 {
  font-size: 2rem;
  font-weight: bold;
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}

.ProseMirror h2 {
  font-size: 1.5rem;
  font-weight: bold;
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}

.ProseMirror h3 {
  font-size: 1.25rem;
  font-weight: bold;
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}

/* Lists */
.ProseMirror ul,
.ProseMirror ol {
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.ProseMirror ul li {
  list-style-type: disc;
}

.ProseMirror ol li {
  list-style-type: decimal;
}

/* Blockquote */
.ProseMirror blockquote {
  border-left: 3px solid hsl(var(--border));
  padding-left: 1rem;
  margin-left: 0;
  margin-right: 0;
  font-style: italic;
}

/* Code blocks */
.ProseMirror pre {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
  font-family: monospace;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;
  overflow-x: auto;
}

.ProseMirror code {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
  font-family: monospace;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
}

/* Links */
.ProseMirror a {
  color: hsl(var(--primary));
  text-decoration: underline;
  cursor: pointer;
}

/* Images */
.ProseMirror img {
  max-width: 100%;
  height: auto;
  margin: 1rem 0;
  border-radius: 0.5rem;
}

/* Focus state */
.ProseMirror:focus {
  outline: none;
}

/* Dark mode support */
.dark .ProseMirror pre {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
}

.dark .ProseMirror code {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
}

.dark .ProseMirror a {
  color: hsl(var(--primary));
}

.dark .ProseMirror blockquote {
  border-left-color: hsl(var(--border));
}
